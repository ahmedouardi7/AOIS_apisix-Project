name: Build and Push apisix-dev to Docker DockerHub


on:
  schedule:
    # UTC 0:00 AM (See https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07)
    - cron: "0 1 * * *"
  push:
    branches: [master]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APISIX_VERSION: master
      APISIX_DOCKER_TAG: master-debian-dev

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build and run
        run: |
          make build-on-debian-dev
          docker compose -f ./compose/docker-compose-master.yaml up -d
          sleep 30
          docker logs compose-apisix-1

      - name: Test APISIX
        run: |

          curl http://127.0.0.1:9180/apisix/admin/routes/1 \
          -H 'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1' -X PUT -d '
            {
            "uri": "/get",
            "upstream": {
                "type": "roundrobin",
                "nodes": {
                    "httpbin.org:80": 1
                }
            }
          }'

          result_code=`curl -I -m 10 -o /dev/null -s -w %{http_code} http://127.0.0.1:9080/get`
          if [[ $result_code -ne 200 ]];then
                  printf "result_code: %s\n" "$result_code"
                  exit 125
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v1
            name: Greeting on variable day

on:
  workflow_dispatch

env:
  DAY_OF_WEEK: Monday

jobs:
  greeting_job:
    runs-on: ubuntu-latest
    env:
      Greeting: Hello
    steps:
      - name: "Say Hello Mona it's Monday"
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
        env:
          First_Name:Mona


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Push apisix image to Docker Hub
        run: |
          make push-multiarch-dev-on-debian
            - name: Setup Node.js environment
  uses: actions/setup-node@v5.0.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Set to false to disable automatic caching based on the package manager field in package.json. By default, caching is enabled if the package manager field is present.
    package-manager-cache: # optional, default is true
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    # Used to specify an alternative mirror to downlooad Node.js binaries from
    mirror: # optional
    # The token used as Authorization header when fetching from the mirror
    mirror-token: # optional
          
